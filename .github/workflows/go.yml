name: CI Pipeline 

on:
  push:
    branches: [ "event-cycle-tests", "main" ]
  pull_request:
    branches: [ "event-cycle-tests", "main" ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24.0']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ./vendor
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: |
          go mod tidy
          go mod vendor
          go get -u golang.org/x/mobile@latest
          go get -u golang.org/x/exp@latest

      - name: Run tests with coverage
        run: |
          go test -v -race -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out

      - name: Build painter
        run: |
          go build -v -o painter ./cmd/painter
          ./painter -version || echo "Build successful but no version flag"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: painter-bin-${{ matrix.go-version }}
          path: |
            ./painter
            coverage.out
